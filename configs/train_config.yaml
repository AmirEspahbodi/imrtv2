train:
  tp_d_epochs: 8
  tp_d_early_stopping_patience: 4
  tp_d_warmup_epochs: 2
  tp_d_loss_weight_decay_rate: 0.02
  # tp_d_loss_weight_decay_rate: 0.0001
  tp_d_loss_weight: dynamic # null / balance / dynamic / list with shape num_classes. Weights for loss function. Don't use it with weighted sampling!

  tp_c_epochs: 10
  tp_c_early_stopping_patience: 4
  tp_c_warmup_epochs: 2
  tp_c_loss_weight_decay_rate: 0.005
  tp_c_loss_weight: balance # null / balance / dynamic / list with shape num_classes. Weights for loss function. Don't use it with weighted sampling!

  batch_size: 8
  num_workers: 2
  criterion: cross_entropy # available criterions are list in 'criterion_args' below
  metrics: [acc, f1, auc, precision, recall] # available metrics are list in utils.metrics
  indicator: acc # indicator for best model selection in validation set
  save_interval: 5 # the epoch interval of saving model
  eval_interval: 1 # the epoch interval of evaluating model on val dataset
  sample_view: false # save and visualize a batch of images on Tensorboard
  pin_memory: true # enables fast data transfer to CUDA-enabled GPUs

  # for plan B
  label_smoothing: 0.1
  swa_start_epoch: 10

  # for plan A
  # warmup_epochs: 2
  # label_smoothing: 0.1
  sam_start_epoch: 6